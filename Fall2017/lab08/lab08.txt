Lab 08
------

Definition:
-----------
The heaps discussed in class were MAX heaps (maximum item is in root).

A MIN heap is similar, except that the heap is organized so that the
minimum item is in the root.  The definition of a MIN heap is:
    -complete binary tree
    -each node has key >= its parent key

This is similar to the definition of a MAX heap given in page T-30 of notes:
http://www.scs.ryerson.ca/~dwoit/courses/cps305/coursedirPublic305/NOTES/trees/

EXAMPLE:

   this is a MIN heap, H:
   -------------------

            7
         /     \
        9      12
      /  \    /  \
     14  10  16  15
    /
   20

   Array Implementation:
   --------------------
   This heap, implemented in an array is stored follows (see notes T-35)
    A[1]=7, A[2]=9, A[3]=12, A[4]=14, A[5]=10, A[6]=16, A[7]=15, A[8]=20
   
   CSF:
   ----
   The array-based heap can be written in comma-separated-form (CSF) as:
   7,9,12,14,10,16,15,20,


A. Consider the algorithms discussed in class for heaps:
     -remove, reheapify, insert, building a heap from n unsorted items, etc.
   These were done for MAX heaps. Consider how you would do these for MIN
   heaps instead. Then do questions below, using your modified algorithms.

B. Try inserting 2 into the MIN heap, H, above.
   Your resulting heap should be:
   2,7,12,9,10,16,15,20,14,

C. Try removing from the MIN heap, H, above. (always remove root)
   Your resulting heap should be:
   9,10,12,14,20,16,15,

D. Try building a MIN heap from these 8 unsorted items:
   9,7,4,5,2,3,1,0
   Your resulting heap should be:
   0,2,1,5,9,3,4,7,
   
-----------------------------------------------------------------------------------


For this lab use MIN HEAPS and ALGORITHMS FOR MIN HEAPS that you figured out above.


What to do for the lab:
-----------------------

0. Copy lab08answers.txt into your own filespace.
   You will modify it by replacing "XXXX" (see below.)

1. Consider the following Starting Arrays:

   Starting Arrays:
   ---------------
   [a-e]: 10,9,8,7,6,5,4,3,2,1,
   [f-j]: 9,10,7,6,5,8,4,3,1,2,
   [k-o]: 7,10,11,9,8,6,5,4,1,2,3,
   [p-t]: 15,11,9,10,8,6,5,4,1,3,2,
   [u-z]: 11,14,9,8,10,6,4,5,2,3,1,

   Determine YOUR starting array: it is the one corresponding to the first 
   letter of your CS linux login name. For example, your prof's CS linux 
   login name is "dwoit", so she looks for the array for "d". Thus, her 
   starting array is the one for [a-e].
   Enter your array, in CSF, into lab08answers.txt, replacing "XXXX" (no spaces!).

2. Draw the binary tree corresponding to your array, using the usual
   method (the node in position x of array has left-child in position x*2 and
   right-child in position x*2+1 of array. Root is in position 1 of array.

   Transform your array/tree into a MIN heap using the algorithm from your notes
   on page T-34 (modified for MIN heaps). 
   Enter your MIN heap, in CSF, into lab08answers.txt, replacing "XXXX" (no spaces!)
   
3. Consider your MIN heap from answer 2 above.
   Insert 0 (the integer zero) into your MIN heap using the algorithm on page T-33,
   (modified for MIN heaps).
   Enter your resulting MIN heap, in CSF, into lab08answers.txt, replacing "XXXX" (no spaces!)

4. Consider your MIN heap from answer 2 above (NOT answer 3!!)
   Remove an item (the root) from the heap, using algorithm on page T-31/T-32 (modified
   for MIN heaps).
   Enter your resulting MIN heap, in CSF, into lab08answers.txt, replacing "XXXX" (no spaces!)

